configure_history () {
	HISTFILE=~/.zsh_history
	HISTSIZE=1000
	SAVEHIST=1000
	setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
	setopt hist_ignore_dups       # ignore duplicated commands history list
	setopt hist_ignore_space      # ignore commands that start with space
	setopt hist_verify            # show command with history expansion to user before running it
	#setopt share_history         # share command history data
}


enable_completions () {
	autoload -Uz compinit
	zstyle ':completion:*' menu select
	zmodload zsh/complist
	compinit
	_comp_options+=(globdots) # Include Hidden Files
}
enable_autosuggestions () {
	autosuggestions_file="/usr/share/zsh/site-functions/zsh-autosuggestions.zsh"
	if [ -f $autosuggestions_file ]; then
	    . $autosuggestions_file
	    # change suggestion color
	    ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=#999'
	fi
}
enable_syntax_highlighting () {
        syntaxhighlighting_file="/usr/share/zsh/site-functions/zsh-syntax-highlighting.zsh"
        if [ -f $syntaxhighlighting_file ]; then
                . $syntaxhighlighting_file
                ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)
                ZSH_HIGHLIGHT_STYLES[default]=none
                ZSH_HIGHLIGHT_STYLES[unknown-token]=underline
                ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=cyan,bold
                ZSH_HIGHLIGHT_STYLES[suffix-alias]=fg=green,underline
                ZSH_HIGHLIGHT_STYLES[global-alias]=fg=green,bold
                ZSH_HIGHLIGHT_STYLES[precommand]=fg=green,underline
                ZSH_HIGHLIGHT_STYLES[commandseparator]=fg=blue,bold
                ZSH_HIGHLIGHT_STYLES[autodirectory]=fg=green,underline
                ZSH_HIGHLIGHT_STYLES[path]=bold
                ZSH_HIGHLIGHT_STYLES[path_pathseparator]=
                ZSH_HIGHLIGHT_STYLES[path_prefix_pathseparator]=
                ZSH_HIGHLIGHT_STYLES[globbing]=fg=blue,bold
                ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=blue,bold
                ZSH_HIGHLIGHT_STYLES[command-substitution]=none
                ZSH_HIGHLIGHT_STYLES[command-substitution-delimiter]=fg=magenta,bold
                ZSH_HIGHLIGHT_STYLES[process-substitution]=none
                ZSH_HIGHLIGHT_STYLES[process-substitution-delimiter]=fg=magenta,bold
                ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=fg=green
                ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=fg=green
                ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=none
                ZSH_HIGHLIGHT_STYLES[back-quoted-argument-delimiter]=fg=blue,bold
                ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=yellow
                ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=yellow
                ZSH_HIGHLIGHT_STYLES[dollar-quoted-argument]=fg=yellow
                ZSH_HIGHLIGHT_STYLES[rc-quote]=fg=magenta
                ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=magenta,bold
                ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=magenta,bold
                ZSH_HIGHLIGHT_STYLES[back-dollar-quoted-argument]=fg=magenta,bold
                ZSH_HIGHLIGHT_STYLES[assign]=none
                ZSH_HIGHLIGHT_STYLES[redirection]=fg=blue,bold
                ZSH_HIGHLIGHT_STYLES[comment]=fg=black,bold
                ZSH_HIGHLIGHT_STYLES[named-fd]=none
                ZSH_HIGHLIGHT_STYLES[numeric-fd]=none
                ZSH_HIGHLIGHT_STYLES[arg0]=fg=cyan
                ZSH_HIGHLIGHT_STYLES[bracket-error]=fg=red,bold
                ZSH_HIGHLIGHT_STYLES[bracket-level-1]=fg=blue,bold
                ZSH_HIGHLIGHT_STYLES[bracket-level-2]=fg=green,bold
                ZSH_HIGHLIGHT_STYLES[bracket-level-3]=fg=magenta,bold
                ZSH_HIGHLIGHT_STYLES[bracket-level-4]=fg=yellow,bold
                ZSH_HIGHLIGHT_STYLES[bracket-level-5]=fg=cyan,bold
                ZSH_HIGHLIGHT_STYLES[cursor-matchingbracket]=standout
        fi
}

enable_colors () {
	# enable color support of ls, less and man, and also add handy aliases
	if [ -x /usr/bin/dircolors ]; then
		    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
		    export LS_COLORS="$LS_COLORS:ow=30;44:" # fix ls color for folders with 777 permissions

		    alias ls='ls --color=auto'
		    #alias dir='dir --color=auto'
		    #alias vdir='vdir --color=auto'

		    alias grep='grep --color=auto'
		    alias fgrep='fgrep --color=auto'
		    alias egrep='egrep --color=auto'
		    alias diff='diff --color=auto'
		    alias ip='ip --color=auto'

		    export LESS_TERMCAP_mb=$'\E[1;31m'     # begin blink
		    export LESS_TERMCAP_md=$'\E[1;36m'     # begin bold
		    export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
		    export LESS_TERMCAP_so=$'\E[01;33m'    # begin reverse video
		    export LESS_TERMCAP_se=$'\E[0m'        # reset reverse video
		    export LESS_TERMCAP_us=$'\E[1;32m'     # begin underline
		    export LESS_TERMCAP_ue=$'\E[0m'        # reset underline

		    # Take advantage of $LS_COLORS for completion as well
		    zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
		    zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
	fi
}

enable_kitty_integration () {
	if [[ -n "$KITTY_INSTALLATION_DIR" ]]; then
		export KITTY_SHELL_INTEGRATION="enabled"
		autoload -Uz -- "$KITTY_INSTALLATION_DIR"/shell-integration/zsh/kitty-integration
		kitty-integration
		unfunction kitty-integration
	fi
	if [[ $TERM == *kitty* ]]; then
	  alias icat="kitten icat"
	  alias mpvcat="mpv -vo kitty"
	  alias kssh="kitten ssh"
	fi
}

enable_starship() {
	if [[ -f /bin/starship ]] then
		eval "$(/bin/starship init zsh)"
	fi
}

enable_zoxide () {
	if [ -f /bin/zoxide ]; then
		eval "$(zoxide init zsh)"
	fi
}

enable_fzf () {
	# rose-pine fzf with transperent background
	export FZF_DEFAULT_OPTS="
	    --color=fg:#908caa,hl:#ebbcba
	    --color=fg+:#e0def4,hl+:#ebbcba
	    --color=border:#403d52,header:#31748f,gutter:#191724
	    --color=pointer:#c4a7e7,marker:#ebbc92,prompt:#908caa
	    "
	if [ -f /bin/fzf ]; then
	    source <(fzf --zsh)
	fi
}
enable_hyprland () {
	if [[ $XDG_SESSION_DESKTOP == "Hyprland" ]]; then
	  alias windows="hyprctl clients"
	fi
}
load_alias_file () {
	if [ -f $HOME/.config/alias.sh ]; then
		  source $HOME/.config/alias.sh
	fi
}
setup_prompt () {
	#PS1="%B%F{69}[%F{133}%n%F{99}@%F{133}%M %{$fg[magenta]%}%~%F{69}]%{$reset_color%}%#%b "
	# stolen from gentoo zsh prompt
	local prompt_gentoo_prompt=${1:-'blue'}
	local prompt_gentoo_user=${2:-'green'}
	local prompt_gentoo_root=${3:-'red'}

	if [ "$EUID" = '0' ]; then
		  local base_prompt="%B%F{$prompt_gentoo_root}%m%k "
	else
		  local base_prompt="%B%F{$prompt_gentoo_user}%n@%m%k "
	fi
	local post_prompt="%b%f%k"

	#setopt noxtrace localoptions

	local path_prompt="%B%F{$prompt_gentoo_prompt}%1~"
	typeset -g PS1="$base_prompt$path_prompt %# $post_prompt"
	typeset -g PS2="$base_prompt$path_prompt %_> $post_prompt"
	typeset -g PS3="$base_prompt$path_prompt ?# $post_prompt"

}
TIMEFMT=$'\nreal\t%E\nuser\t%U\nsys\t%S\ncpu\t%P' # Format for 'time' command
bindkey -e
setopt autocd extendedglob
setopt autocd              # change directory just by typing its name
setopt correct            # auto correct mistakes
setopt interactivecomments # allow comments in interactive mode
setopt magicequalsubst     # enable filename expansion for arguments of the form ‘anything=expression’
setopt nonomatch           # hide error message if there is no match for the pattern
setopt notify              # report the status of background jobs immediately
setopt numericglobsort     # sort filenames numerically when it makes sense
setopt promptsubst         # enable command substitution in prompt
autoload -U colors && colors

enable_syntax_highlighting
enable_kitty_integration
enable_colors
enable_autosuggestions
enable_completions
load_alias_file
enable_hyprland
configure_history 
setup_prompt


alias ll='ls -l'
alias la='ls -A'
alias l='ls -CF'
alias sys="systemctl"
alias usys="systemctl --user"
alias pubip="curl http://ifconfig.me"
alias timestamp="date -u +"%Y-%m-%dT%H:%M:%SZ""
alias datestamp="date -u +"%Y-%m-%d""
alias s="sudo"
alias se="sudoedit"
alias v="$EDITOR"

## [Completion]
## Completion scripts setup. Remove the following line to uninstall
[[ -f /home/suse/.dart-cli-completion/zsh-config.zsh ]] && . /home/suse/.dart-cli-completion/zsh-config.zsh || true
## [/Completion]

